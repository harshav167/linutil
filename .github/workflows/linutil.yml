name: LinUtil Release

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl,aarch64-unknown-linux-musl,armv7-unknown-linux-musleabihf

      - name: Install cross-rs
        run: cargo install cross

      - name: Build x86_64 binary
        run: cargo build --target x86_64-unknown-linux-musl --release

      - name: Build aarch64 binary
        run: cross build --target aarch64-unknown-linux-musl --release

      - name: Build arm64 (armv7) binary
        run: cross build --target armv7-unknown-linux-musleabihf --release

      - name: Prepare binaries
        run: |
          mkdir -p build
          mv target/x86_64-unknown-linux-musl/release/linutil build/linutil
          mv target/aarch64-unknown-linux-musl/release/linutil build/linutil-aarch64
          mv target/armv7-unknown-linux-musleabihf/release/linutil build/linutil-arm64

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-binaries
          path: build/*

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Build ARM64 macOS binary
        run: |
          rustup target add aarch64-apple-darwin
          cargo build --target aarch64-apple-darwin --release

      - name: Prepare binary
        run: |
          mkdir -p build
          mv target/aarch64-apple-darwin/release/linutil build/linutil-arm64-macos

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-binary
          path: build/linutil-arm64-macos

  create_release:
    needs: [build_linux, build_macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Prepare release files
        run: |
          mkdir release
          cp artifacts/linux-binaries/* release/
          cp artifacts/macos-binary/* release/
          cp start.sh release/
          cp startdev.sh release/

      - name: Generate release version
        id: version
        run: echo "version=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body: |
            Changes in this release:
            - Built and released the latest version of LinUtil
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update main branch
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add release/*
          git commit -m "Update binaries for release ${{ steps.version.outputs.version }}"
          git push origin main
